<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>pcp_parent</artifactId>
        <groupId>com.pcp</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>pcp_base</artifactId>

    <dependencies>
        <!-- data jpa 简化对数据库的CRUD -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- 连接数据库 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.14</version>
        </dependency>
        <!-- 依赖公共模块 -->
        <dependency>
            <groupId>com.pcp</groupId>
            <artifactId>pcp_common</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!-- Eureka客户端 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
    </dependencies>
    <!-- MavenPlugin 使微服务生成镜像并上传到私有仓库 -->
    <build>
        <finalName>app</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- docker的maven插件，官网：
            https://github.com/spotify/docker-maven-plugin -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.13</version>
                <configuration>
                    <imageName>192.168.200.129:5000/${project.artifactId}:${project.version}</imageName>
                    <baseImage>jdk8</baseImage>
                    <entryPoint>["java","‐jar","/${project.build.finalName}.jar"]</entryPoint>
                    <resources>                   
                        <resource>                        
                            <targetPath>/</targetPath>             
                            <directory>${project.build.directory}</directory>                    
                            <include>${project.build.finalName}.jar</include>
                        </resource>             
                    </resources>
                    <dockerHost>http://192.168.200.129:2375</dockerHost>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>